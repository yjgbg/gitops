apiVersion: v1
kind: Namespace
metadata:
  name: oauth
---
# 2. 部署 oauth2-proxy (支持泛域名)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: oauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
        args:
          - --provider=github
          - --client-id=Ov23ligc7DliGGZGvtJn
          - --github-org=yjgbg-awesome  # 可选：限制组织成员
          - --email-domain=*
          - --upstream=http://127.0.0.1:4180  # 仅需响应认证状态
          - --http-address=0.0.0.0:4180
          - --redirect-url=https://oauth.yjgbg.com/oauth2/callback
          - --cookie-domain=.yjgbg.com  # 跨子域共享Cookie
          - --cookie-secure=true        # 外部有HTTPS，启用安全Cookie
          - --set-xauthrequest=true
        env:
          - name: OAUTH2_PROXY_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: oauth2-secrets
                key: client-secret
          - name: OAUTH2_PROXY_COOKIE_SECRET
            valueFrom:
              secretKeyRef:
                name: oauth2-secrets
                key: cookie-secret
        ports:
        - containerPort: 4180
---
# 3. 创建 oauth2-proxy Service
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: oauth
spec:
  ports:
  - port: 4180
    targetPort: 4180
  selector:
    app: oauth2-proxy
---
# 5. 部署 OAuth 回调端点 (固定域名)
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: oauth-callback
  namespace: oauth
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`oauth.yjgbg.com`) && PathPrefix(`/oauth2`)
    kind: Rule
    services:
    - name: oauth2-proxy
      port: 4180